// @lang=sva @ts=8

module property_checker import ariane_pkg::*;
  #(parameter WIDTH = 8)
  (
  input clk_i,
  input rst_ni
  );

  default clocking default_clk @(posedge clk_i); endclocking

  localparam MIN_LATENCY = 0;
  localparam MAX_LATENCY = 10;


  property wcet_p;
    (serdiv.in_rdy_o == 1'b1) && (serdiv.in_vld_i == 1'b0) && (serdiv.flush_i == 1'b0)
    ##1 (serdiv.in_vld_i == 1'b1)
    ##0 (serdiv.flush_i == 1'b0) [*MAX_LATENCY]
  implies 
    (serdiv.out_vld_o == 1'b0)                   // Setup cycle
    ##1 (serdiv.out_vld_o == 1'b0)[*MAX_LATENCY] 
    ##1 (serdiv.out_vld_o == 1'b1); 	
  endproperty
  wcet_p_a: assert property (disable iff (serdiv.flush_i | !rst_ni) wcet_p);

  property wcet2_p;
    (serdiv.in_rdy_o == 1'b1) && (serdiv.in_vld_i == 1'b0) && (serdiv.flush_i == 1'b0)
    ##1 (serdiv.in_vld_i == 1'b1)
    ##0 (serdiv.flush_i == 1'b0)[*1:$]
  implies 
    (serdiv.out_vld_o == 1'b0)                   // Setup cycle
    ##[2:$] (serdiv.out_vld_o == 1'b0) 
    ##1 (serdiv.out_vld_o == 1'b1);
  endproperty
  wcet2_p_a: assert property (disable iff (serdiv.flush_i | !rst_ni) wcet2_p);

property wcet1_p;
    (serdiv.in_rdy_o == 1'b1) && (serdiv.in_vld_i == 1'b0) && (serdiv.flush_i == 1'b0)
    ##1 (serdiv.in_vld_i == 1'b1)
    ##0 (serdiv.flush_i == 1'b0)&&(serdiv.out_vld_o == 1'b0)[*MAX_LATENCY]  // Setup cycle
    ##1 (serdiv.flush_i == 1'b0)
  implies
    ##(MAX_LATENCY+1) (serdiv.out_vld_o == 1'b1); 	
  endproperty
  wcet1_p_a: assert property (disable iff (!rst_ni) wcet1_p);

property bcet_p;
    (serdiv.in_rdy_o == 1'b1) && (serdiv.in_vld_i == 1'b0) && (serdiv.flush_i == 1'b0)
    ##1 (serdiv.in_vld_i == 1'b1)
    ##0 (serdiv.flush_i == 1'b0)[*MIN_LATENCY+1]  // + Setup cycle
  implies
    ##(MIN_LATENCY+1) (serdiv.out_vld_o == 1'b1);
endproperty
bcet_p_a: assert property (disable iff (!rst_ni) bcet_p);

  /* 
  Latency is the number of clock cycles between (serdiv.in_vld_i == 1'b1) and (serdiv.out_vld_o == 1'b1).
  (serdiv.in_vld_i == 1'b1) is given at t+1.
  (serdiv.out_vld_o == 1'b1) arrives at t+1+MAX_LATENCY.
  A value of MAX_LATENCY = 9 can still produce a witness, so I guess the maximum latency is 9 clock cycles in that case.
  */


endmodule

bind serdiv property_checker #(.WIDTH(WIDTH)) checker_bind(.clk_i(clk_i), .rst_ni(rst_ni));