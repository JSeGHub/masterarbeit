module property_checker
  (
  input clk,
  input rst
  );

  default clocking default_clk @(posedge clk); endclocking

  `include "tidal.sv"

`begin_tda(ops)

  localparam MAX_LATENCY = 30;

  function automatic State_Equivalence();
  State_Equivalence = (
    (U1.cnt_a_zero_q   == U2.cnt_a_zero_q  ) &&
    (U1.cnt_b_zero_q   == U2.cnt_b_zero_q  ) &&
    (U1.cnt_label_q    == U2.cnt_label_q   ) &&
    (U1.cnt_q          == U2.cnt_q         ) &&
    (U1.comp_inv_q     == U2.comp_inv_q    ) &&
    (U1.div_res_zero_q == U2.div_res_zero_q) &&
    (U1.id_q           == U2.id_q          ) &&
    (U1.label_a_q      == U2.label_a_q     ) &&
    (U1.label_b_q      == U2.label_b_q     ) &&
    (U1.op_a_n1_q      == U2.op_a_n1_q     ) &&
    (U1.op_a_q         == U2.op_a_q        ) &&
    (U1.op_b_n1_q      == U2.op_b_n1_q     ) &&
    (U1.op_b_q         == U2.op_b_q        ) &&
    (U1.op_b_zero_q    == U2.op_b_zero_q   ) &&
    (U1.opcode_q       == U2.opcode_q      ) &&
    (U1.rem_sel_q      == U2.rem_sel_q     ) &&
    (U1.res_inv_q      == U2.res_inv_q     ) &&
    (U1.res_q          == U2.res_q         ) &&
    (U1.state_q        == U2.state_q       )
  );
  endfunction

  function automatic Control_Output_Equivalence();
    Control_Output_Equivalence = (
      (U1.in_rdy_o  == U2.in_rdy_o ) &&
      (U1.out_vld_o == U2.out_vld_o) &&
      (U1.id_o      == U2.id_o     )     // Not really control, but irrelevant for this proof
    );
  endfunction

  property label_c;
    (U1.label_a_i == U2.label_a_i) &&
    (U1.label_b_i == U2.label_b_i) &&
    ((U1.label_a_i == 1'b1) || (U1.op_a_i == U2.op_a_i)) &&
    ((U1.label_b_i == 1'b1) || (U1.op_b_i == U2.op_b_i));
  endproperty
  label_c_a: assume property (label_c);

  // ---------------------------------
  // - Basic Functional Verification -
  // ---------------------------------

  sequence reset_sequence;
    (rst == 1'b0);
  endsequence

  property reset_p;
    reset_sequence
    |=>
    t ##0 (U1.state_q        == 2'b00) and
    t ##0 (U1.op_a_q         ==    '0) and 
    t ##0 (U1.op_b_q         ==    '0) and
    t ##0 (U1.res_q          ==    '0) and
    t ##0 (U1.cnt_q          ==    '0) and
    t ##0 (U1.id_q           ==    '0) and
    t ##0 (U1.rem_sel_q      ==    '0) and
    t ##0 (U1.comp_inv_q     ==    '0) and
    t ##0 (U1.res_inv_q      ==    '0) and
    t ##0 (U1.op_b_zero_q    ==    '0) and
    t ##0 (U1.div_res_zero_q ==    '0) and
    t ##0 (U1.cnt_label_q    ==    '0) and
    t ##0 (U1.label_a_q      ==    '1) and
    t ##0 (U1.label_b_q      ==    '1) and
    t ##0 (U1.cnt_a_zero_q   ==    '0) and
    t ##0 (U1.cnt_b_zero_q   ==    '0);
  endproperty
  reset_p_a: assert property (reset_p);

  // ------------------------------------
  // - UPEC for Data-Independent Timing -
  // ------------------------------------

  property dit_p;
    t ##0 State_Equivalence()
  implies
    during_o(t, 1, t, MAX_LATENCY, Control_Output_Equivalence());
  endproperty
  dit_p_a: assert property (disable iff (!rst) dit_p);

`end_tda

endmodule

bind serdiv_miter property_checker checker_bind(.clk(clk), .rst(rst));